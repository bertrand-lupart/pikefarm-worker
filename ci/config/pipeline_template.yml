#@ load("@ytt:data", "data")

#@ def stripslash(n):
#@  return n.replace("/","-")
#@ end

resources:

#@ for distro in data.values.distros :
  - name: #@ stripslash("blueprints-" + distro.name)
    type: git
    icon: github
    source:
      uri: #@ data.values.git_uri
      branch: main
      paths:
        - #@ "docker/" + distro.name + "/*"
#@   for arch in distro.arch :
  - name: #@ stripslash("harbor-slot-" + distro.name + "-" + arch)
    type: registry-image
    icon: docker
    source:
      repository: #@ data.values.registry_repo
      username: ((private-registry-username))
      password: ((private-registry-password))
      tag: #@ stripslash(distro.name + "-" + arch)
#@   end
#@ end

jobs:
#@ for distro in data.values.distros :
  - name: #@ stripslash("build-" + distro.name  )
    serial_groups: [ build-image ]
    plan:
      - get: #@ "blueprints-" + distro.name
        trigger: true
      - in_parallel:
          limit: 2
          steps:
#@   for arch in distro.arch :
            - do:
                - task: docker-build
                  privileged: true
                  config:
                    platform: linux
                    image_resource:
                      type: registry-image
                      source:
                        repository: concourse/oci-build-task
                    inputs:
                      - name: #@ stripslash("blueprints-" + distro.name)
                    caches:
                      - path: cache
                    outputs:
                      - name: image
                    run:
                      path: build
                    params:
                      CONTEXT: #@ "blueprints-" + distro.name + "/docker/" + distro.name
                      IMAGE_PLATFORM: #@ arch
                  output_mapping:
                    image: #@ "image-" + stripslash(arch)
                - put: #@ stripslash("harbor-slot-" + distro.name + "-" + arch)
                  params:
                    image: #@ "image-" + stripslash(arch) + "/image.tar"
#@  end
      - task: aggregate-images
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: gstack/gk-ops
          inputs:
#@   for arch in distro.arch :
            - name: #@ stripslash("image-" + arch)
#@   end
          run:
            path: bash
            args:
              - -c
              - |
                set -ueo pipefail
                for img in image-*; do
                  tar -tvf ${img}/image.tar
                  exit 1
                done
#@ end
